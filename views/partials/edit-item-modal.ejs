<%
  const editItemModals = [
    {
      id: 'editItemNameModal',
      title: 'Edit Item Name',
      inputType: 'text-input',
      inputName: 'newItemName',
      label: 'Item Name',
      itemProperty: 'name',
      formId: 'editItemNameForm',
      invalidFeedback: 'Please provide a valid item name.'
    },
    {
      id: 'editItemCodeModal',
      title: 'Edit Item Code',
      inputType: 'text-input',
      inputName: 'newItemCode',
      label: 'Item Code',
      itemProperty: 'code',
      formId: 'editItemCodeForm',
      invalidFeedback: 'Please provide a valid item code.'
    },
    {
      id: 'editItemQtyUnitModal',
      title: 'Edit Item Qty/Unit',
      inputType: 'text-input',
      inputName: 'newItemQtyUnit',
      label: 'Item Qty/Unit',
      itemProperty: 'qtyUnit',
      formId: 'editItemQtyUnitForm',
      invalidFeedback: 'Please provide a valid item qty/unit.'
    },
    {
      id: 'editItemDescModal',
      title: 'Edit Item Description',
      inputType: 'textarea',
      inputName: 'newItemDesc',
      label: 'Item Description',
      itemProperty: 'description',
      formId: 'editItemDescForm',
      invalidFeedback: 'Please provide a valid item description.'
    },
    {
      id: 'editItemCollabsModal',
      title: 'Edit Item Collaborators',
      inputType: '',
      inputName: 'newItemCollaborator',
      label: 'Assign a Collaborator',
      itemProperty: 'collaborators',
      formId: 'editItemCollabsForm',
      invalidFeedback: 'Please provide a valid username.'
    }
  ];
%>

<%
  const editAccountModals = [
    {
      id: 'editAccountUsernameModal',
      title: 'Edit Username',
      inputType: 'text-input',
      inputName: 'newAcctUsername',
      label: 'Edit Username',
      itemProperty: 'acctUsername',
      formId: 'editAcctUsernameForm',
      invalidFeedback: 'Please provide a valid username.'
    },
    {
      id: 'editAccountDisplayNameModal',
      title: 'Edit Item Collaborators',
      inputType: 'text-input',
      inputName: 'newAcctDisplayName',
      label: 'Edit Display Name',
      itemProperty: 'acctDisplayName',
      formId: 'editAcctDisplayNameForm',
      invalidFeedback: 'Please provide a valid display name.'
    },
    {
      id: 'editAccountPasswordModal',
      title: 'Edit Password',
      inputType: 'password',
      inputName: 'newAcctPassword',
      label: 'Edit Password',
      itemProperty: 'acctPassword',
      formId: 'editPasswordForm',
      invalidFeedback: 'Please provide a valid password.'
    }
  ];
%>

<% 
  let editAllModals;
  if(isItem === 1) {
    editAllModals = editItemModals;
  }
  else {
    editAllModals = editAccountModals;
  }
  for(let editModal of editAllModals) { 
%>
<div class="modal fade montserrat" id="<%= editModal.id %>" tabindex="-1" 
      aria-labelledby="modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalLabel"><%- editModal.title %></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="clearForm()"></button>
      </div>
      <div class="modal-body">

        <form id="<%= editModal.formId %>" class="needs-validation"
              method="post" action="<%= formSubmitPath %>" novalidate>
          <div class="mb-3 form-floating">
            <% if(editModal.inputType === 'textarea') { %>
              <textarea class="form-control" name="<%= editModal.inputName %>" placeholder="<%= editModal.label %>" required></textarea>
            <% } else if(editModal.inputType === 'text-input') { %>
              <input type="text" class="form-control" name="<%= editModal.inputName %>" placeholder="<%= editModal.label %>" required>
            <% } else if(editModal.inputType === 'password') { %>
              <input type="password" class="form-control" name="<%= editModal.inputName %>" placeholder="<%= editModal.label %>" required>
            <% } else { %>
              <select class="form-select" name="<%= editModal.inputName %>" aria-label="Assign Collaborator to Item" required>
                <option selected disabled value=""><%- editModal.label %></option>
                <% if(sampleItem.assignedPeople.length > 0) { %>
                <% for(let collab of sampleItem.assignedPeople) { %>
                  <option value="<%= collab %>"><%- collab %></option>
                <% } %>
                <% } %>
              </select>
            <% } %>
            <label for="<%= editModal.inputName %>" class="col-form-label">
              <%- editModal.label %>
            </label>
            <div class="invalid-feedback">
              <%- editModal.invalidFeedback %>
            </div>
            <input type="hidden" name="property" value="<%= editModal.itemProperty %>">
          </div>
        </form>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-gray" data-bs-dismiss="modal" onclick="clearForm()">Close</button>
        <button type="submit" class="btn btn-secondary" form="<%= editModal.formId %>">Confirm</button>
      </div>
    </div>
  </div>
</div>
<% } %>

<script>
  // Clear form when closed or confirmed
  function clearForm() {
    let toClear = document.getElementsByClassName("form-control");
    for(let i = 0; i < toClear.length; i++){
      toClear[i].value = "";
    }
  };

  // Client-side validation
  (function () {
    'use strict'

    // Fetch all the forms
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission for empty required inputs
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })();
</script>
